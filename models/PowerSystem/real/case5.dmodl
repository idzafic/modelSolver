Header:
	maxIter=1000
	report=AllDetails	//Solved - only final solved solution, All - shows solved and nonSolved with iterations, AllDetails - All + debug information
	maxReps = -1
	outToTxt = false
end
//Generated by MATPOWER to dmodl coverter
Model [type=NL domain=real eps=1e-6 name="PF in polar coordinates"]:
Vars [out=true]:
	δ_1 = δ_4; V_1 = V_4
	δ_2 = δ_4; V_2 = V_4
	δ_3 = δ_4; V_3 = V_4
	δ_5 = δ_4; V_5 = V_4
Params:
	δ_4 = 0.0; 	V_4 = 1.0
	Y_1_1 = 223.59425522958563; θ_1_1 = -1.4711176702738844 
	Y_1_2 = 35.41057616405655; θ_1_2 = 1.6704649792860586 // line 1-2
	Y_1_4 = 32.73148652006543; θ_1_4 = 1.6704649792860586 // line 1-4
	Y_1_5 = 155.47456097031082; θ_1_5 = 1.6704649792860586 // line 1-5
	Y_2_1 = 35.41057616405655; θ_2_1 = 1.6704649792860586 // line 2-1
	Y_2_2 = 127.53089296124946; θ_2_2 = -1.4711176717259415 
	Y_2_3 = 92.13307316759158; θ_2_3 = 1.6704649792860586 // line 2-3
	Y_3_2 = 92.13307316759158; θ_3_2 = 1.6704649792860586 // line 3-2
	Y_3_3 = 125.62344155147142; θ_3_3 = -1.4711176703430426 
	Y_3_4 = 33.50293569730603; θ_3_4 = 1.6704649792860586 // line 3-4
	Y_4_1 = 32.73148652006543; θ_4_1 = 1.6704649792860586 // line 4-1
	Y_4_3 = 33.50293569730603; θ_4_3 = 1.6704649792860586 // line 4-3
	Y_4_4 = 99.72737769665355; θ_4_4 = -1.4711176667980241 
	Y_4_5 = 33.50293569730603; θ_4_5 = 1.6704649792860586 // line 4-5
	Y_5_1 = 155.47456097031082; θ_5_1 = 1.6704649792860586 // line 5-1
	Y_5_4 = 33.50293569730603; θ_5_4 = 1.6704649792860586 // line 5-4
	Y_5_5 = 188.95859097046065; θ_5_5 = -1.4711176690922663 
	P1_inj = 2.1
	Q1_inj = 0.0 [out = true]
	P2_inj = -3.0
	Q2_inj = -0.9861
	P3_inj = 0.2349000000000001
	Q3_inj = -0.9861 [out = true]
	P4_inj = -4.0
	Q4_inj = -1.3147
	P5_inj = 4.6651
	Q5_inj = 0.0 [out = true]
	V_1_sp = 1.0
	V_3_sp = 1.0
	V_5_sp = 1.0
NLEs:
	// node 2 - PQ
	V_2 * (Y_2_1 * V_1 * cos(δ_2 - θ_2_1 - δ_1) + Y_2_2 * V_2 * cos(δ_2 - θ_2_2 - δ_2) + Y_2_3 * V_3 * cos(δ_2 - θ_2_3 - δ_3))  = P2_inj
	V_2 * (Y_2_1 * V_1 * sin(δ_2 - θ_2_1 - δ_1) + Y_2_2 * V_2 * sin(δ_2 - θ_2_2 - δ_2) + Y_2_3 * V_3 * sin(δ_2 - θ_2_3 - δ_3))  = Q2_inj
	// node 1 - PV
	V_1 * (Y_1_1 * V_1 * cos(δ_1 - θ_1_1 - δ_1) + Y_1_2 * V_2 * cos(δ_1 - θ_1_2 - δ_2) + Y_1_4 * V_4 * cos(δ_1 - θ_1_4 - δ_4) + Y_1_5 * V_5 * cos(δ_1 - θ_1_5 - δ_5))  = P1_inj 
	V_1 = V_1_sp 
	// node 3 - PV
	V_3 * (Y_3_2 * V_2 * cos(δ_3 - θ_3_2 - δ_2) + Y_3_3 * V_3 * cos(δ_3 - θ_3_3 - δ_3) + Y_3_4 * V_4 * cos(δ_3 - θ_3_4 - δ_4))  = P3_inj 
	V_3 = V_3_sp 
	// node 5 - PV
	V_5 * (Y_5_1 * V_1 * cos(δ_5 - θ_5_1 - δ_1) + Y_5_4 * V_4 * cos(δ_5 - θ_5_4 - δ_4) + Y_5_5 * V_5 * cos(δ_5 - θ_5_5 - δ_5))  = P5_inj 
	V_5 = V_5_sp 
end
