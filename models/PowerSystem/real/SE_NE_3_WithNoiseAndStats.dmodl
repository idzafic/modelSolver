Header:
	maxIter=50
	report=AllDetails //Solved - only final solved solution, All - shows solved and nonSolved with iterations, AllDetails - All + debug information 
end  //end of header
//random noise generators
Model [type=WLS domain=real name="GNSE With Noise and Statistics"]:
Vars [out=true]:
	v_1=1
	δ_2=δ_1		// Variable name and its initial value (optional)
	v_2=1
	δ_3=δ_1
	v_3=1
Params:
	w_inj=1
	w_v=1
	w_zi=10000
	δ_1=0		// slack angle
	aY=32.8797974610715
	aY11=aY
	aY21=aY
	aY22=65.7595949221429
	aY23=aY
	aY32=aY
	aY33=aY
	θ_diag=-1.40564764938027 
	θ_offDiag=1.73594500420952 
	θ_11=θ_diag
	θ_21=θ_offDiag
	θ_22=θ_diag
	θ_23=θ_offDiag
	θ_32=θ_offDiag
	θ_33=θ_diag
	// injection measurements 
	P3_real=-1
	Q3_real=-0.3
	// will be contaminated with sensor's noise 
	P3_inj=P3_real
	Q3_inj=Q3_real
	// voltage measurements 
	v1_meas=1
	v2_meas=0.984267
	v3_meas=0.969386
P3_est [out=true]; Q3_est [out=true]
	minVal [out=true]; maxVal [out=true]
	avgVal [out=true]; varVal [out=true]
	devVal [out=true]
Distribs:
	g1 [type=Gauss mean=0 dev=0.03 width=0.1]
	g2 [type=Gauss mean=0.001 dev=0.04 width=0.1]
Stats:
	stat
// add sensor noise (Gauss) on measurements 
PreProc:
	P3_inj  += rnd(g1) //add noise
	Q3_inj  += rnd(g1) //add noise
	v1_meas += rnd(g2) //add noise
	v2_meas += rnd(g2) //add noise
	v3_meas += rnd(g2) //add noise
WLSEs:
	// node 2 (ZI)
	[w=w_zi]	aY21*v_1*cos(θ_21+δ_1) + v_2*aY22*cos(θ_22+δ_2) + aY23*v_3*cos(θ_23+δ_3)=0
	[w=w_zi]	aY21*v_1*sin(θ_21+δ_1) + v_2*aY22*sin(θ_22+δ_2) + aY23*v_3*sin(θ_23+δ_3)=0
	// node 3 
	[w=w_inj]	v_3^2*aY33*cos(θ_33) + v_3*(aY32*v_2*cos(δ_3-θ_32-δ_2)) = P3_inj
	[w=w_inj]	-v_3^2*aY33*sin(θ_33) + v_3*(aY32*v_2*sin(δ_3-θ_32-δ_2)) = Q3_inj
	// voltages 
	[w=w_v]	v_1 = v1_meas
	[w=w_v]	v_2 = v2_meas
	[w=w_v]	v_3 = v3_meas
PostProc:
	P3_est = v_3^2*aY33*cos(θ_33) + v_3*(aY32*v_2*cos(δ_3-θ_32-δ_2))
	Q3_est = -v_3^2*aY33*sin(θ_33) + v_3*(aY32*v_2*sin(δ_3-θ_32-δ_2))
	stat << abs(P3_est-P3_real) << abs(Q3_est-Q3_real) // insert absolute estimation errors to 
	minVal = smin(stat)
	maxVal = smax(stat)
	avgVal = avg(stat)
	varVal = var(stat)
	devVal = dev(stat)
end