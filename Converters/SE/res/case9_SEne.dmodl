Header:
	maxIter=1000
	report=AllDetails	//Solved - only final solved solution, All - shows solved and nonSolved with iterations, AllDetails - All + debug information
	maxReps = -1
	outToTxt = false
end
//Generated by MATPOWER to dmodl coverter
Model [type=WLS reInit=true eps=1e-5 maxIter=50 domain=cmplx name="SE With PF SubModel in complex domain"]:
Vars [out=true]:
	v_1 = v_1_sl
	v_2 = v_1_sl
	v_3 = v_1_sl
	v_4 = v_1_sl
	v_5 = v_1_sl
	v_6 = v_1_sl
	v_7 = v_1_sl
	v_8 = v_1_sl
	v_9 = v_1_sl
Params:
	v_1_sl = 1.04*e^(1i*0.0) [out=true]
	y_1_1 = -17.36111111111111i 
	y_1_4 = 17.36111111111111i // line 1-4
	y_2_2 = -16.0i 
	y_2_8 = 16.0i // line 2-8
	y_3_3 = -17.064846416382252i 
	y_3_6 = 17.064846416382252i // line 3-6
	y_4_1 = 17.36111111111111i // line 4-1
	y_4_4 = 3.3073789620253065 -39.30888872611897i 
	y_4_5 = -1.9421912487147266 + 10.510682051867931i // line 4-5
	y_4_9 = -1.36518771331058 + 11.60409556313993i // line 4-9
	y_5_4 = -1.9421912487147266 + 10.510682051867931i // line 5-4
	y_5_5 = 3.2242003871388416 -15.840927014229457i 
	y_5_6 = -1.2820091384241148 + 5.588244962361526i // line 5-6
	y_6_3 = 17.064846416382252i // line 6-3
	y_6_5 = -1.2820091384241148 + 5.588244962361526i // line 6-5
	y_6_6 = 2.437096619314212 -32.153861805106956i 
	y_6_7 = -1.1550874808900968 + 9.784270426363173i // line 6-7
	y_7_6 = -1.1550874808900968 + 9.784270426363173i // line 7-6
	y_7_7 = 2.772209954136233 -23.30324902327162i 
	y_7_8 = -1.617122473246136 + 13.697978596908444i // line 7-8
	y_8_2 = 16.0i // line 8-2
	y_8_7 = -1.617122473246136 + 13.697978596908444i // line 8-7
	y_8_8 = 2.8047268525372844 -35.44561313021703i 
	y_8_9 = -1.1876043792911484 + 5.975134533308591i // line 8-9
	y_9_4 = -1.36518771331058 + 11.60409556313993i // line 9-4
	y_9_8 = -1.1876043792911484 + 5.975134533308591i // line 9-8
	y_9_9 = 2.5527920926017282 -17.338230096448523i 
	P2_inj = 1.63
	Q2_inj = 0.0654 [out = true]
	P3_inj = 0.85
	Q3_inj = -0.10949999999999999 [out = true]
	S5_inj = -0.9 -0.3i 
	S7_inj = -1.0 -0.35i 
	S9_inj = -1.25 -0.5i 
	V_2_sp = 1.025
	V_3_sp = 1.025
	v_1_meas [type=real out=true]
	v_2_meas [type=real out=true]
	v_3_meas [type=real out=true]
	v_4_meas [type=real out=true]
	v_5_meas [type=real out=true]
	v_6_meas [type=real out=true]
	v_7_meas [type=real out=true]
	v_8_meas [type=real out=true]
	v_9_meas [type=real out=true]
	w_inj = 10.0 [type=real]
	w_br = 1.1 [type=real]
	w_v = 1.0 [type=real]
	w_zi = 100.0 [type=real]
	P2_meas [out = true]; P2_est [out = true]
	Q2_est [out = true]
	P3_meas [out = true]; P3_est [out = true]
	Q3_est [out = true]
	S5_meas [out = true]
	S5_est [out = true]
	S7_meas [out = true]
	S7_est [out = true]
	S9_meas [out = true]
	S9_est [out = true]
SubModel [type=NL alwaysOn=true eps=1e-4 maxIter=200 domain=cmplx copyPars=3000 alwaysOn=false name="Solving power flow"]:
	Vars [conj=true out=true]:
		v_2 = v_1_sl
		v_3 = v_1_sl
		v_4 = v_1_sl
		v_5 = v_1_sl
		v_6 = v_1_sl
		v_7 = v_1_sl
		v_8 = v_1_sl
		v_9 = v_1_sl
	Params:
		v_1 = v_1_sl
	Distribs:
		g_inj [type=Gauss mean=0 dev=0.02]
		g_br [type=Gauss mean=0 dev=0.03]
		g_v [type=Gauss mean=0 dev=0.04]
	NLEs:
		// node 4 - PQ
		conj(y_4_1 * v_1 + y_4_4 * v_4 + y_4_5 * v_5 + y_4_9 * v_9) = 0
		(y_4_1 * v_1 + y_4_4 * v_4 + y_4_5 * v_5 + y_4_9 * v_9) = 0
		// node 5 - PQ
		v_5 * conj(y_5_4 * v_4 + y_5_5 * v_5 + y_5_6 * v_6) = S5_inj
		conj(v_5) * (y_5_4 * v_4 + y_5_5 * v_5 + y_5_6 * v_6) = conj(S5_inj)
		// node 6 - PQ
		conj(y_6_3 * v_3 + y_6_5 * v_5 + y_6_6 * v_6 + y_6_7 * v_7) = 0
		(y_6_3 * v_3 + y_6_5 * v_5 + y_6_6 * v_6 + y_6_7 * v_7) = 0
		// node 7 - PQ
		v_7 * conj(y_7_6 * v_6 + y_7_7 * v_7 + y_7_8 * v_8) = S7_inj
		conj(v_7) * (y_7_6 * v_6 + y_7_7 * v_7 + y_7_8 * v_8) = conj(S7_inj)
		// node 8 - PQ
		conj(y_8_2 * v_2 + y_8_7 * v_7 + y_8_8 * v_8 + y_8_9 * v_9) = 0
		(y_8_2 * v_2 + y_8_7 * v_7 + y_8_8 * v_8 + y_8_9 * v_9) = 0
		// node 9 - PQ
		v_9 * conj(y_9_4 * v_4 + y_9_8 * v_8 + y_9_9 * v_9) = S9_inj
		conj(v_9) * (y_9_4 * v_4 + y_9_8 * v_8 + y_9_9 * v_9) = conj(S9_inj)
		// node 2 - PV
		v_2 * conj(y_2_2 * v_2 + y_2_8 * v_8) + conj(v_2) * (y_2_2 * v_2 + y_2_8 * v_8)  = 2*P2_inj 
		v_2 * conj(v_2) = V_2_sp^2 
		// node 3 - PV
		v_3 * conj(y_3_3 * v_3 + y_3_6 * v_6) + conj(v_3) * (y_3_3 * v_3 + y_3_6 * v_6)  = 2*P3_inj 
		v_3 * conj(v_3) = V_3_sp^2 
	PostProc:
		Q2_inj = imag(v_2 * conj(y_2_2 * v_2 + y_2_8 * v_8))
		Q3_inj = imag(v_3 * conj(y_3_3 * v_3 + y_3_6 * v_6))
		@main.v_1_meas = abs(v_1) + real(rnd(g_v))
		@main.v_2_meas = abs(v_2) + real(rnd(g_v))
		@main.v_3_meas = abs(v_3) + real(rnd(g_v))
		@main.v_4_meas = abs(v_4) + real(rnd(g_v))
		@main.v_5_meas = abs(v_5) + real(rnd(g_v))
		@main.v_6_meas = abs(v_6) + real(rnd(g_v))
		@main.v_7_meas = abs(v_7) + real(rnd(g_v))
		@main.v_8_meas = abs(v_8) + real(rnd(g_v))
		@main.v_9_meas = abs(v_9) + real(rnd(g_v))
		@main.S5_meas = v_5 * conj(y_5_4 * v_4 + y_5_5 * v_5 + y_5_6 * v_6) + rnd(g_inj)
		@main.S7_meas = v_7 * conj(y_7_6 * v_6 + y_7_7 * v_7 + y_7_8 * v_8) + rnd(g_inj)
		@main.S9_meas = v_9 * conj(y_9_4 * v_4 + y_9_8 * v_8 + y_9_9 * v_9) + rnd(g_inj)
		@main.P2_meas = real(v_2 * conj(y_2_2 * v_2 + y_2_8 * v_8)) + real(rnd(g_inj))
		@main.P3_meas = real(v_3 * conj(y_3_3 * v_3 + y_3_6 * v_6)) + real(rnd(g_inj))
end
WLSEs:
	[w=w_v] v_1 = v_1_sl
	[w=w_v] conj(v_1) = conj(v_1_sl)
	[w=w_v] v_2*conj(v_2) = v_2_meas^2
	[w=w_v] v_3*conj(v_3) = v_3_meas^2
	[w=w_v] v_4*conj(v_4) = v_4_meas^2
	[w=w_v] v_5*conj(v_5) = v_5_meas^2
	[w=w_v] v_6*conj(v_6) = v_6_meas^2
	[w=w_v] v_7*conj(v_7) = v_7_meas^2
	[w=w_v] v_8*conj(v_8) = v_8_meas^2
	[w=w_v] v_9*conj(v_9) = v_9_meas^2
	[w=w_inj] v_2 * conj(y_2_2 * v_2 + y_2_8 * v_8) + conj(v_2) * (y_2_2 * v_2 + y_2_8 * v_8) = 2 * P2_meas
	[w=w_inj] v_3 * conj(y_3_3 * v_3 + y_3_6 * v_6) + conj(v_3) * (y_3_3 * v_3 + y_3_6 * v_6) = 2 * P3_meas
	[w=w_inj] v_5 * conj(y_5_4 * v_4 + y_5_5 * v_5 + y_5_6 * v_6) = S5_meas
	[w=w_inj] conj(v_5) * (y_5_4 * v_4 + y_5_5 * v_5 + y_5_6 * v_6) = conj(S5_meas)
	[w=w_inj] v_7 * conj(y_7_6 * v_6 + y_7_7 * v_7 + y_7_8 * v_8) = S7_meas
	[w=w_inj] conj(v_7) * (y_7_6 * v_6 + y_7_7 * v_7 + y_7_8 * v_8) = conj(S7_meas)
	[w=w_inj] v_9 * conj(y_9_4 * v_4 + y_9_8 * v_8 + y_9_9 * v_9) = S9_meas
	[w=w_inj] conj(v_9) * (y_9_4 * v_4 + y_9_8 * v_8 + y_9_9 * v_9) = conj(S9_meas)
	[w=w_zi] y_4_1 * v_1 + y_4_4 * v_4 + y_4_5 * v_5 + y_4_9 * v_9 = 0
	[w=w_zi] conj(y_4_1 * v_1 + y_4_4 * v_4 + y_4_5 * v_5 + y_4_9 * v_9) = 0
	[w=w_zi] y_6_3 * v_3 + y_6_5 * v_5 + y_6_6 * v_6 + y_6_7 * v_7 = 0
	[w=w_zi] conj(y_6_3 * v_3 + y_6_5 * v_5 + y_6_6 * v_6 + y_6_7 * v_7) = 0
	[w=w_zi] y_8_2 * v_2 + y_8_7 * v_7 + y_8_8 * v_8 + y_8_9 * v_9 = 0
	[w=w_zi] conj(y_8_2 * v_2 + y_8_7 * v_7 + y_8_8 * v_8 + y_8_9 * v_9) = 0
PostProc:
	S5_est = v_5 * conj(y_5_4 * v_4 + y_5_5 * v_5 + y_5_6 * v_6)
	S7_est = v_7 * conj(y_7_6 * v_6 + y_7_7 * v_7 + y_7_8 * v_8)
	S9_est = v_9 * conj(y_9_4 * v_4 + y_9_8 * v_8 + y_9_9 * v_9)
	P2_est = real(v_2 * conj(y_2_2 * v_2 + y_2_8 * v_8))
	Q2_est = imag(v_2 * conj(y_2_2 * v_2 + y_2_8 * v_8))
	P3_est = real(v_3 * conj(y_3_3 * v_3 + y_3_6 * v_6))
	Q3_est = imag(v_3 * conj(y_3_3 * v_3 + y_3_6 * v_6))
end
